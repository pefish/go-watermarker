// Code generated by MockGen. DO NOT EDIT.
// Source: image (interfaces: Image)

// Package mock_image is a generated GoMock package.
package mock_image

import (
	gomock "github.com/golang/mock/gomock"
	image "image"
	color "image/color"
	reflect "reflect"
)

// MockImage is a mock of Image interface
type MockImage struct {
	ctrl     *gomock.Controller
	recorder *MockImageMockRecorder
}

// MockImageMockRecorder is the mock recorder for MockImage
type MockImageMockRecorder struct {
	mock *MockImage
}

// NewMockImage creates a new mock instance
func NewMockImage(ctrl *gomock.Controller) *MockImage {
	mock := &MockImage{ctrl: ctrl}
	mock.recorder = &MockImageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockImage) EXPECT() *MockImageMockRecorder {
	return m.recorder
}

// At mocks base method
func (m *MockImage) At(arg0, arg1 int) color.Color {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "At", arg0, arg1)
	ret0, _ := ret[0].(color.Color)
	return ret0
}

// At indicates an expected call of At
func (mr *MockImageMockRecorder) At(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "At", reflect.TypeOf((*MockImage)(nil).At), arg0, arg1)
}

// Bounds mocks base method
func (m *MockImage) Bounds() image.Rectangle {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Bounds")
	ret0, _ := ret[0].(image.Rectangle)
	return ret0
}

// Bounds indicates an expected call of Bounds
func (mr *MockImageMockRecorder) Bounds() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Bounds", reflect.TypeOf((*MockImage)(nil).Bounds))
}

// ColorModel mocks base method
func (m *MockImage) ColorModel() color.Model {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ColorModel")
	ret0, _ := ret[0].(color.Model)
	return ret0
}

// ColorModel indicates an expected call of ColorModel
func (mr *MockImageMockRecorder) ColorModel() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ColorModel", reflect.TypeOf((*MockImage)(nil).ColorModel))
}
